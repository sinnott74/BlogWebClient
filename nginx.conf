#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

error_log stderr;
daemon off;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}

# env BACKEND_ADDR;


http {
    charset utf-8;
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip on;
    gzip_disable "msie6";
    gzip_comp_level 6;
    gzip_min_length 1100;
    gzip_buffers 16 8k;
    gzip_proxied any;
    gunzip on;
    gzip_static always;
    gzip_types text/plain text/css text/js text/xml text/javascript application/javascript application/x-javascript application/json application/xml application/xml+rss;
    gzip_vary on;

    # upstream backend {
    #   # server host.docker.internal:8080;
    #   server <%= ENV["BACKEND_ADDR"] %>:80;
    # }

    server {
      listen <%= ENV["PORT"] %>;
      server_name localhost;
      root <%= ENV["APP_ROOT"] %>/public/build;

      # Skips redirect for localhost
      if ($host = 'localhost'){
        set $http_x_forwarded_proto "https";
      }

      if ($http_x_forwarded_proto != "https") {
        return 301 https://$host$request_uri;
      }

      # To make sure any assets can get through :)
      location / {
        try_files $uri @rewrites;
      }

      # If no asset matches, send it to your javascript app. Hopefully it's a route in the app!
      location @rewrites {
        rewrite ^(.+)$ /index.html last;
      }

      location ~*  \.(jpg|jpeg|png|gif|ico|css|js|svg)$ {
        expires 7d;
      }

      location /api/ {
        proxy_pass <%= ENV["BACKEND_ADDR"] %>;
      }
    }
}
